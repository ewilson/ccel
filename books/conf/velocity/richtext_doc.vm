#**
 *  Render a complex document in the results list
 *#

## Load Mime-Type List and Mapping
#parse('mime_type_lists.vm')
## Sets:
## * supportedMimeTypes, AKA supportedtypes
## * mimeExtensionsMap, AKA extMap

## Title
#if($doc.getFieldValue('title'))
  #set($title = $esc.html($doc.getFirstValue('title')))
#else
  #set($title = "["+$doc.getFieldValue('id')+"]")
#end

## Sort out Mime-Type
#set($ct = $list.get($doc.getFirstValue('content_type').split(";"),0))
#set($filename = $doc.getFieldValue('resourcename'))
#set($filetype = false)
#set($filetype = $mimeExtensionsMap.get($ct))

## TODO: falling back to file extension is convenient,
## except when you don't have an icon for that extension
## example "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
## document with a .docx extension.
## It'd be nice to fall back to an "unknown" or the existing "file" type
## We sort of do this below, but only if the filename has no extension
## (anything after the last dot).

#if(!$filetype)
  #set($filetype = $filename.substring($filename.lastIndexOf(".")).substring(1))
#end

<div>
  Id: #field('id')
</div>

## Section Title
#if($doc.getFieldValue('section_title'))
<div>
    Section: #field('section_title')
</div>
#end

## Title
#if($doc.getFieldValue('title'))
<div>
    Book: #field('title')
</div>
#end

## Author
#if($doc.getFieldValue('author'))
  <div>
    Author: #field('author')
  </div>
#end

## Para Text
#if($doc.getFieldValue('para_text'))
<div class="result-body">
    #field('para_text')
</div>
#end

#parse('debug.vm')
